/**
 * Modal System CSS - CDN-Compatible Semantic Classes
 * 
 * This file provides a complete modal styling system designed for use with
 * Tailwind CSS CDN. All styles use CSS custom properties and semantic classes
 * for maintainability and consistency.
 * 
 * Architecture:
 * - Base Modal Structure: Core overlay, backdrop, container, and content styles
 * - Modal Components: Headers, bodies, footers with consistent styling  
 * - Button System: Unified primary/secondary button patterns
 * - Form Elements: Standardized input, textarea, select with variants
 * - Layout Utilities: Flexible grid and column layouts
 * - Component-Specific: Tabs, loading states, notes, tasks, etc.
 * 
 * CDN Compatibility: No @apply directives - all styles use vanilla CSS
 * with CSS custom properties for theming consistency.
 */

/* ========== Base Modal Structure ========== */

.modal-overlay {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 50;
    overflow-y: auto;
    transition: opacity 0.3s ease-in-out;
}

.modal-overlay.hidden {
    display: none;
}

.modal-overlay:not(.hidden) {
    animation: modalFadeIn 0.3s ease-out;
}

@keyframes modalFadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.modal-backdrop {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: rgba(0, 0, 0, 0.5);
    transition: var(--transition-fast);
}

.modal-container {
    display: flex;
    align-items: flex-end;
    justify-content: center;
    min-height: 100vh;
    padding-top: 1rem;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-bottom: 5rem;
    text-align: center;
}

@media (min-width: 640px) {
    .modal-container {
        display: block;
        padding: 0;
    }
}

.modal-content {
    display: inline-block;
    animation: modalScaleIn 0.3s ease-out;
}

@keyframes modalScaleIn {
    from {
        opacity: 0;
        transform: scale(0.95);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

.modal-content {
    display: inline-block;
    animation: modalScaleIn 0.3s ease-out;
    vertical-align: bottom;
    background-color: white;
    border-radius: var(--radius-lg);
    padding: 0;
    text-align: left;
    overflow: visible;
    box-shadow: var(--shadow-lg);
    transform: translateZ(0);
    transition: var(--transition-normal);
    border: 1px solid var(--color-gray-200);
    max-width: 42rem;
    width: 100%;
}

@media (min-width: 640px) {
    .modal-content {
        margin-top: 2rem;
        margin-bottom: 2rem;
        vertical-align: middle;
    }
}


/* ========== Modal Header ========== */

.modal-header {
    background-color: var(--color-gray-50);
    padding: var(--spacing-xl) var(--spacing-2xl);
    border-radius: var(--radius-lg) var(--radius-lg) 0 0;
    border-bottom: 1px solid var(--color-gray-200);
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 0;
}

.modal-title {
    font-size: var(--text-xl);
    font-weight: var(--font-semibold);
    color: var(--color-gray-900);
    margin: 0;
}

.modal-close-button {
    color: var(--color-gray-400);
    padding: var(--spacing-sm);
    border-radius: var(--radius-full);
    transition: var(--transition-normal);
    background: transparent;
}

.modal-close-button:hover {
    color: var(--color-gray-600);
    background-color: var(--color-gray-100);
}

/* ========== Modal Body ========== */

.modal-body {
    padding: var(--spacing-2xl);
    background-color: white;
}

/* ========== Modal Footer ========== */

.modal-footer {
    padding: var(--spacing-xl) var(--spacing-2xl);
    background-color: var(--color-gray-50);
    border-top: 1px solid var(--color-gray-200);
    border-radius: 0 0 var(--radius-lg) var(--radius-lg);
    display: flex;
    justify-content: flex-end;
    gap: var(--spacing-md);
}

/* ========== Unified Modal Button System ========== */
/*
 * Provides consistent button styling across all modal contexts.
 * Uses composition pattern with base + variant classes for DRY code.
 * CDN-compatible with explicit property declarations.
 */

/* Base button styling */
.modal-button-base {
    padding: 0.5rem 1rem;
    font-size: var(--text-sm);
    font-weight: 500;
    border-radius: var(--radius-lg);
    border: none;
    cursor: pointer;
    transition: var(--transition-normal);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
}

.modal-button-base:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

/* Primary button (save, submit actions) */
.modal-button-primary {
    background-color: #2563eb;
    color: white;
    box-shadow: var(--shadow-sm);
}

.modal-button-primary:hover:not(:disabled) {
    background-color: #1d4ed8;
}

.modal-button-primary:focus {
    outline: none;
    box-shadow: 0 0 0 2px #3b82f6, 0 0 0 4px rgba(59, 130, 246, 0.3);
}

/* Secondary button (cancel, dismiss actions) */
.modal-button-secondary {
    background-color: white;
    color: var(--color-gray-700);
    border: 1px solid var(--color-gray-300);
    box-shadow: var(--shadow-sm);
}

.modal-button-secondary:hover:not(:disabled) {
    background-color: var(--color-gray-50);
    border-color: var(--color-gray-400);
}

.modal-button-secondary:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--color-gray-400);
}

/* Legacy aliases for backward compatibility - duplicating styles for CDN compatibility */
.modal-cancel-button {
    /* Base button styling */
    padding: 0.5rem 1rem;
    font-size: var(--text-sm);
    font-weight: 500;
    border-radius: var(--radius-lg);
    cursor: pointer;
    transition: var(--transition-normal);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    /* Secondary button styling */
    background-color: white;
    color: var(--color-gray-700);
    border: 1px solid var(--color-gray-300);
    box-shadow: var(--shadow-sm);
}

.modal-cancel-button:hover:not(:disabled) {
    background-color: var(--color-gray-50);
    border-color: var(--color-gray-400);
}

.modal-cancel-button:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--color-gray-400);
}

.modal-cancel-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.modal-save-button {
    /* Base button styling */
    padding: 0.5rem 1rem;
    font-size: var(--text-sm);
    font-weight: 500;
    border-radius: var(--radius-lg);
    border: none;
    cursor: pointer;
    transition: var(--transition-normal);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    /* Primary button styling */
    background-color: #2563eb;
    color: white;
    box-shadow: var(--shadow-sm);
}

.modal-save-button:hover:not(:disabled) {
    background-color: #1d4ed8;
}

.modal-save-button:focus {
    outline: none;
    box-shadow: 0 0 0 2px #3b82f6, 0 0 0 4px rgba(59, 130, 246, 0.3);
}

.modal-save-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

/* ========== Form Elements ========== */
/*
 * Standardized form styling system with consistent look and behavior.
 * Includes base styles, variants (compact/medium), and legacy compatibility.
 * All elements follow the same interaction patterns (hover, focus, disabled).
 */

.form-field, .form-group {
    margin-bottom: var(--spacing-xl);
}

.form-label {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--color-gray-700);
    margin-bottom: var(--spacing-sm);
}

.form-label.required::after, .form-label-required::after {
    content: '*';
    color: var(--color-danger);
    margin-left: var(--spacing-xs);
    font-weight: var(--font-bold);
}

/* Form Field Base Styling - Shared by all form elements */
.form-field-base {
    padding: var(--spacing-md) var(--spacing-lg);
    border: 1px solid var(--color-gray-300);
    border-radius: var(--radius-lg);
    font-size: var(--text-sm);
    background-color: white;
    transition: var(--transition-normal);
    box-shadow: var(--shadow-sm);
}

.form-field-base:hover {
    border-color: var(--color-gray-400);
}

.form-field-base:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px var(--color-primary-lighter);
}

/* Specific form element styling that extends base */
.form-input,
.form-textarea,
.form-select {
    /* Inherit all base styling */
    padding: var(--spacing-md) var(--spacing-lg);
    border: 1px solid var(--color-gray-300);
    border-radius: var(--radius-lg);
    font-size: var(--text-sm);
    background-color: white;
    transition: var(--transition-normal);
    box-shadow: var(--shadow-sm);
}

/* Full-width inputs */
.form-input,
.form-textarea {
    width: 100%;
}

.form-input:hover,
.form-textarea:hover,
.form-select:hover {
    border-color: var(--color-gray-400);
}

.form-input:focus,
.form-textarea:focus,
.form-select:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px var(--color-primary-lighter);
}

.form-input::placeholder,
.form-textarea::placeholder {
    color: var(--color-gray-400);
}

/* Textarea specific styles */
.form-textarea {
    resize: vertical;
    min-height: 5rem;
}

/* ========== Form Input Variants ========== */

/* Compact input variant (for smaller spaces) */
.form-input-compact {
    padding: 0.25rem 0.5rem;
    border: 1px solid var(--color-gray-300);
    border-radius: var(--radius-md);
    font-size: var(--text-sm);
    background-color: white;
    transition: var(--transition-normal);
    box-shadow: var(--shadow-sm);
}

.form-input-compact:hover {
    border-color: var(--color-gray-400);
}

.form-input-compact:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 1px var(--color-primary);
}

/* Medium input variant (between standard and compact) */
.form-input-medium {
    padding: 0.5rem 0.75rem;
    border: 1px solid var(--color-gray-300);
    border-radius: var(--radius-md);
    font-size: var(--text-sm);
    background-color: white;
    transition: var(--transition-normal);
    box-shadow: var(--shadow-sm);
}

.form-input-medium:hover {
    border-color: var(--color-gray-400);
}

.form-input-medium:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 2px var(--color-primary);
}

.form-checkbox {
    color: #2563eb;
    border: 1px solid var(--color-gray-300);
    border-radius: var(--radius-sm);
}

.form-checkbox:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.5);
}

.form-radio {
    margin-right: 0.5rem;
    color: #2563eb;
    border: 1px solid var(--color-gray-300);
    border-radius: var(--radius-sm);
}

.form-radio:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.5);
}

/* ========== Layout Utilities ========== */
/*
 * Flexible layout system for modal content organization.
 * Provides grid systems and flex column layouts with consistent gaps.
 * Includes legacy aliases for backward compatibility.
 */

/* Grid System - Standard gap */
.modal-grid-base {
    display: grid;
    gap: 1rem;
}

.modal-grid-2 {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
}

.modal-grid-3 {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
}

/* Compact grid variant */
.modal-grid-compact {
    display: grid;
    gap: 0.5rem;
}

/* Flex Column Layouts */
.modal-flex-col {
    display: flex;
    flex-direction: column;
}

.modal-flex-col-sm {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.modal-flex-col-md {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
}

.modal-flex-col-lg {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

/* Legacy aliases for backward compatibility */
.modal-section {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.modal-content-spacing {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
}

.modal-section-title {
    font-size: var(--text-md);
    font-weight: var(--font-semibold);
    color: var(--color-gray-900);
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--color-gray-100);
}

/* ========== Tab Navigation ========== */
/*
 * Tab navigation system for multi-section modals.
 * Includes active/inactive states and badge support.
 */


/* ========== Loading States ========== */
/*
 * Loading indicators and states for async operations.
 * Includes spinner animation and loading text styling.
 */

.modal-loading {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem 0;
}

.modal-spinner {
    display: inline-block;
    animation: spin 1s linear infinite;
    border-radius: 50%;
    height: 2rem;
    width: 2rem;
    border: 2px solid transparent;
    border-bottom-color: #2563eb;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

.modal-loading-text {
    color: var(--color-gray-500);
}

/* ========== Notes Section ========== */

.modal-notes {
    margin-top: 1.5rem;
}

.modal-notes-title {
    font-size: var(--text-sm);
    font-weight: 500;
    color: var(--color-gray-900);
    margin-bottom: 0.75rem;
}

.modal-notes-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin-bottom: 1rem;
    max-height: 10rem;
    overflow-y: auto;
}

.modal-note-item {
    background-color: var(--color-gray-50);
    border-radius: var(--radius-lg);
    padding: 0.75rem;
}

.modal-note-content {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
}

.modal-note-text {
    font-size: var(--text-sm);
    color: var(--color-gray-800);
}

.modal-note-date {
    font-size: var(--text-xs);
    color: var(--color-gray-500);
    margin-top: 0.25rem;
}

.modal-note-delete {
    margin-left: 0.5rem;
    color: var(--color-gray-400);
    transition: color 0.2s ease-in-out;
}

.modal-note-delete:hover {
    color: #dc2626;
}

.modal-note-input-container {
    display: flex;
    gap: 0.5rem;
}

.modal-note-input {
    /* Uses medium input variant with flex modifier */
    flex: 1;
    padding: 0.5rem 0.75rem;
    border: 1px solid var(--color-gray-300);
    border-radius: var(--radius-md);
    font-size: var(--text-sm);
    background-color: white;
    transition: var(--transition-normal);
    box-shadow: var(--shadow-sm);
}

.modal-note-input:hover {
    border-color: var(--color-gray-400);
}

.modal-note-input:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 2px var(--color-primary);
}

.modal-note-add-button {
    /* Uses primary button styling with slightly different padding */
    padding: 0.5rem 0.75rem;
    font-size: var(--text-sm);
    font-weight: 500;
    border-radius: var(--radius-md);
    border: none;
    cursor: pointer;
    transition: var(--transition-normal);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background-color: #2563eb;
    color: white;
    box-shadow: var(--shadow-sm);
}

.modal-note-add-button:hover:not(:disabled) {
    background-color: #1d4ed8;
}

.modal-note-add-button:focus {
    outline: none;
    box-shadow: 0 0 0 2px #3b82f6, 0 0 0 4px rgba(59, 130, 246, 0.3);
}

.modal-note-add-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

/* ========== Empty States ========== */

.modal-empty-state {
    text-align: center;
    color: var(--color-gray-500);
    padding: 2rem 0;
}

.modal-empty-state-small {
    text-align: center;
    color: var(--color-gray-500);
    padding: 1rem 0;
}

.modal-empty-state-text {
    font-size: var(--text-sm);
    font-style: italic;
}

/* ========== Entity Relationship Sections ========== */

.modal-related-items {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    max-height: 8rem;
    overflow-y: auto;
}

.modal-related-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.5rem;
    background-color: var(--color-gray-50);
    border-radius: var(--radius-md);
}

.modal-related-item-content {
    flex: 1;
}

.modal-related-item-title {
    font-size: var(--text-sm);
    font-weight: 500;
    color: var(--color-gray-900);
}

.modal-related-item-subtitle {
    font-size: var(--text-xs);
    color: var(--color-gray-500);
}

.modal-related-item-meta {
    font-size: var(--text-xs);
    color: var(--color-gray-400);
}

/* ========== Task-Specific Styles ========== */



/* ========== Status Badges ========== */
/*
 * Status and priority indicators with semantic color coding.
 * Includes status badges (complete, pending, etc.) and priority levels.
 */

.modal-status-badge {
    padding: 0.25rem 0.5rem;
    font-size: var(--text-xs);
    font-weight: 500;
    border-radius: 9999px;
    text-transform: capitalize;
}

.modal-status-complete {
    background-color: #dcfce7;
    color: #166534;
}

.modal-status-pending {
    background-color: var(--color-gray-100);
    color: var(--color-gray-800);
}

.modal-status-in-progress {
    background-color: #fef3c7;
    color: #92400e;
}

.modal-status-cancelled {
    background-color: #fee2e2;
    color: #991b1b;
}

/* ========== Priority Indicators ========== */


/* ========== Transitions ========== */
/*
 * Animation classes for modal enter/leave transitions.
 * CDN-compatible with explicit transform and opacity declarations.
 */

.modal-fade-enter {
    transition-timing-function: ease-out;
    transition-duration: 0.3s;
    opacity: 0;
}

.modal-fade-enter-to {
    opacity: 1;
}

.modal-fade-leave {
    transition-timing-function: ease-in;
    transition-duration: 0.2s;
    opacity: 1;
}

.modal-fade-leave-to {
    opacity: 0;
}

.modal-scale-enter {
    transition-timing-function: ease-out;
    transition-duration: 0.3s;
    opacity: 0;
    transform: translateY(1rem);
}

@media (min-width: 640px) {
    .modal-scale-enter {
        transform: translateY(0) scale(0.95);
    }
}

.modal-scale-enter-to {
    opacity: 1;
    transform: translateY(0);
}

@media (min-width: 640px) {
    .modal-scale-enter-to {
        transform: scale(1);
    }
}

.modal-scale-leave {
    transition-timing-function: ease-in;
    transition-duration: 0.2s;
    opacity: 1;
    transform: translateY(0);
}

@media (min-width: 640px) {
    .modal-scale-leave {
        transform: scale(1);
    }
}

.modal-scale-leave-to {
    opacity: 0;
    transform: translateY(1rem);
}

@media (min-width: 640px) {
    .modal-scale-leave-to {
        transform: translateY(0) scale(0.95);
    }
}

/* ========== Entity Linker Specific ========== */

